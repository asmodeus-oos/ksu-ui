name: Build and Release OnePlus 10 Pro Kernel

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      ksun_branch:
        description: "Choose KernelSU Next Branch"
        required: true
        type: choice
        options:
          - stable
          - next
        default: next
      android12-5_10_susfs_branch:
        description: "Choose SusFS Branch for android12-5.10"
        type: string
        default: "gki-android12-5.10"

jobs:
  build-op10pro:
    name: Build OP10pro (${{ inputs.ksun_branch }}, android12-5.10)
    runs-on: ubuntu-latest
    steps:
      - name: Select SusFS Branch
        id: get-susfs-branch
        run: |
          SUSFS_BRANCH="${{ inputs.android12-5_10_susfs_branch }}"
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build Kernel
        uses: ./.github/actions
        with:
          model: OP10pro
          soc: waipio
          branch: oneplus/sm8450
          manifest: oneplus_10_pro_v.xml
          android_version: android12
          kernel_version: "5.10"
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}

  release:
    needs: build-op10pro
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "*TEST BUILD* OnePlus 10 Pro Kernel With KernelSU Next & SUSFS v1.5.9 *TEST BUILD*"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.9-r0"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Release Notes
        id: generate-notes
        run: |
          cat << EOF > release_notes.md
          ## Kernel Build
          
          This release contains **KernelSU Next** and **SUSFS v1.5.9**
          
          ### Device
          - Model:Realme gt 2 pro (Rmx3301)
          - Android: 12
          - Kernel: 5.10
          
          ### Features
          - [+] KernelSU-Next
          - [+] SUSFS v1.5.9
          - [+] Wireguard Support
          - [+] Maphide LineageOS Detections
          - [+] Futile Maphide for jit-zygote-cache Detections
          - [+] Magic Mount Support
          - [+] Ptrace message leak fix for kernels < 5.16
          - [+] Manual Hooks [scope_min_manual_hooks_v1.4]
          - [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
          - [+] BBR v1 Support
          EOF

      - name: Create GitHub Release
        run: |
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease

      - name: Upload Zipped Artifacts
        run: |
          for file in ./downloaded-artifacts/*/*.zip; do
            if [ -f "$file" ]; then
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber
            fi
          done

      - name: Upload boot.img and vendor_boot.img separately
        run: |
          for file in $(find ./downloaded-artifacts -type f \( -name "boot.img" -o -name "vendor_boot.img" \)); do
            if [ -f "$file" ]; then
              echo "Uploading $file..."
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber
            fi
          done
